// <auto-generated />
using System;
using WebApiDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApiDemo.Migrations
{
    [DbContext(typeof(CafeDbContext))]
    [Migration("20240507162708_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Cafe.Models.ClientTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ClientTables");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Name = "Столик 1"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Столик 2"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Столик біля вікна"
                        });
                });

            modelBuilder.Entity("Cafe.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Nomenclatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Суп гороховий",
                            Price = 45.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Суп сирний",
                            Price = 75.0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Суп харчо",
                            Price = 55.0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Лоці",
                            Price = 105.0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Картопля фрі",
                            Price = 60.0
                        });
                });

            modelBuilder.Entity("Cafe.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Bill")
                        .HasColumnType("REAL");

                    b.Property<int>("ClientTableId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientTableId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bill = 0.0,
                            ClientTableId = 2,
                            Date = new DateTime(2024, 3, 2, 9, 30, 23, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Bill = 0.0,
                            ClientTableId = 3,
                            Date = new DateTime(2024, 3, 2, 9, 50, 23, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Bill = 0.0,
                            ClientTableId = 1,
                            Date = new DateTime(2024, 3, 2, 9, 5, 23, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Cafe.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Count")
                        .HasColumnType("REAL");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<double>("Sum")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Cafe.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdCode")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCode = "1234567890",
                            Name = "Administartor",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCode = "1234567892",
                            Name = "Manager",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCode = "1234567893",
                            Name = "Barmen",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCode = "1234567894",
                            Name = "Cook",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCode = "1234567891",
                            Name = "Waiter",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("Cafe.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Role = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Role = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Role = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            Role = 3,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Cafe.Models.Order", b =>
                {
                    b.HasOne("Cafe.Models.ClientTable", "ClientTable")
                        .WithMany("Orders")
                        .HasForeignKey("ClientTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientTable");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cafe.Models.OrderDetail", b =>
                {
                    b.HasOne("Cafe.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Cafe.Models.UserRole", b =>
                {
                    b.HasOne("Cafe.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cafe.Models.ClientTable", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
